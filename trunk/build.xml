<?xml version="1.0" encoding="UTF-8"?>

<project name="BackupMessageViewer" default="default" basedir=".">
    <description>Builds, tests, and runs the project BackupMessageViewer.</description>
    <import file="nbproject/build-impl.xml"/>

   <property name="version.num" value="0.9.4"/>
   <tstamp>
      <format property="version.dat" pattern="yyyy-MM-dd"/>
   </tstamp>

   <!-- provide a path where executable distros should be saved  -->
   <property name="release.dir" value="${basedir}/release"/>
   <!-- provide name parts for your executable. -->
   <property name="dist.base.name" value="BackupMessageViewer"/>
   <property name="standalone.jar.name" value="${dist.base.name}_${version.num}"/>
   <property name="dist.jar.name" value="${standalone.jar.name}-all.jar"/>

   <target name="-post-compile">
      <delete>
         <fileset dir="${build.classes.dir}" includes="**/package-info.class"/>
      </delete>
   </target>

   <target name="-pre-jar" depends="genHelp">
      <propertyfile file="${src.dir}/com/wj/android/messageviewer/resources/application.properties">
         <entry key="application.title" value="${application.title}"/>
         <entry key="application.vendor" value="${application.vendor}"/>
         <entry key="application.homepage" value="${application.homepage}"/>
         <entry key="version.num" value="${version.num}"/>
         <entry key="version.dat" value="${version.dat}"/>
      </propertyfile>
   </target>

   <!-- =================================================================== -->
   <!-- Generates all files necessary to display JavaHelp for this          -->
   <!-- application.                                                        -->
   <!--                                                                     -->
   <!-- JavaHelp file set is genearated via docbook xsl stylesheet from the -->
   <!-- docbook document help.dbx in docs/JavaHelp folder.                  -->
   <!-- =================================================================== -->
   <target name="genHelp" depends="init">
      <property environment="env"/>
      <delete dir="${src.help.dir}/JavaHelp"/>
      <mkdir  dir="${src.help.dir}/JavaHelp"/>
      <copy todir="${src.help.dir}/JavaHelp">
         <fileset dir="docs/JavaHelp"/>
      </copy>
      <replace file="${src.help.dir}/JavaHelp/help.dbx">
         <replacefilter token="@application.vendor@" value="${application.vendor}"/>
         <replacefilter token="@application.title@" value="${application.title}"/>
         <replacefilter token="@application.homepage@" value="${application.homepage}"/>
         <replacefilter token="@version.dat@" value="${version.dat}"/>
         <replacefilter token="@dist.base.name@" value="${dist.base.name}"/>
         <replacefilter token="@dist.jar.name@" value="${dist.jar.name}"/>
      </replace>
      <replace file="${src.help.dir}/JavaHelp/javahelp.xsl" token="@docbook.home@" value="${env.DOCBOOK_XSL_HOME}"/>
      <xslt basedir="${src.help.dir}/JavaHelp" destdir="${src.help.dir}/JavaHelp" includes="help.dbx" style="${src.help.dir}/JavaHelp/javahelp.xsl" reloadstylesheet="true">
         <factory name="org.apache.xalan.processor.TransformerFactoryImpl"/>
      </xslt>
      <delete file="${src.help.dir}/JavaHelp/help.html"/>
      <delete file="${src.help.dir}/JavaHelp/javahelp.xsl"/>
      <delete file="${src.help.dir}/JavaHelp/help.dbx"/>

      <java fork="true" jar="${env.JAVAHELP_HOME}/javahelp/bin/jhindexer.jar">
         <arg value="-db"/>
         <arg path="${src.help.dir}/JavaHelp/JavaHelpSearch"/>
         <arg path="${src.help.dir}/JavaHelp"/>
      </java>
   </target>

   <!-- =================================================================== -->
   <!-- Bundles a stand-alone OneJAR distribution for this application      -->
   <!-- =================================================================== -->
   <import file="one-jar-ant-task.xml"/>
   <target name="dist-all" depends="jar" description="Bundles a stand-alone OneJAR distribution">
      <echo level="info">Bundling: OneJAR is composing ${dist.jar.name}</echo>
      <tstamp>
         <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss z"/>
      </tstamp>

      <exec outputproperty="svna.version" executable="svnversion">
         <arg value="-c"/>
         <redirector>
            <outputfilterchain>
               <tokenfilter>
                  <replaceregex pattern="^[0-9]*:?" replace="" flags="g"/>
                  <replaceregex pattern="M" replace="" flags="g"/>
               </tokenfilter>
            </outputfilterchain>
         </redirector>
      </exec>

      <one-jar destfile="${dist.jar.dir}/${dist.jar.name}" update="false">
         <manifest>
            <attribute name="Manifest-Version" value="1.0"/>
            <attribute name="Built-By" value="${application.vendor}"/>
            <attribute name="Built-Date" value="${NOW}"/>
            <attribute name="Main-Class" value="com.simontuffs.onejar.Boot"/>
            <attribute name="Class-Path" value="${javac.classpath}"/>
            <attribute name="One-Jar-Main-Class" value="${main.class}"/>
            <attribute name="Bundle-Name" value="${application.title}"/>
            <attribute name="Bundle-Version" value="${version.num}"/>
            <attribute name="Bundle-Date" value="${NOW}"/>
            <attribute name="Bundle-Revision" value="${svna.version}"/>
            <attribute name="Implementation-Title" value="${application.title}"/>
            <attribute name="Implementation-Version" value="${version.num}"/>
            <attribute name="Implementation-Vendor" value="${application.vendor}"/>
            </manifest>
            <main>
               <fileset dir="${build.classes.dir}/"/>
            </main>
            <lib>
               <fileset file="${dist.jar.dir}/lib/*.*"/>
            </lib>
      </one-jar>
      <delete file="${dist.jar.dir}/README.TXT"/>
      <echo level="info">adding execute permission to ${dist.jar.name}</echo>
      <chmod file="${dist.jar.dir}/${dist.jar.name}" perm="u+x"/>
      <echo file="${dist.jar.dir}/README.txt" append="false">Run the stand-alone distribution from the command line using:
      java -jar -Xmx256m ${dist.jar.name}
      </echo>
      <concat destfile="${dist.jar.dir}/README.txt" append="true">
         <filelist dir="${basedir}/docs" files="changelog"/>
      </concat>
      <echo level="info">Bundling: OneJAR is done.</echo>
   </target>

   <!-- =================================================================== -->
   <!-- Creating ZIP archives of the standalone OneJAR for windows, mac,    -->
   <!-- linux                                                               -->
   <!-- =================================================================== -->
   <target name="dist-zip" depends="dist-all" description="Creating ZIP archives of the standalone OneJAR for windows, mac, linux">
      <echo level="info">Bundling: Creating JAR Launchers</echo>
      <mkdir  dir="${release.dir}"/>
      <mkdir  dir="${release.dir}/${standalone.jar.name}-mac"/>
      <mkdir  dir="${release.dir}/${standalone.jar.name}-win"/>
      <echo  file="${release.dir}/${standalone.jar.name}-win/${dist.base.name}.bat">
java -jar -Xmx256m ${dist.jar.name}
      </echo>
      <copy todir="${release.dir}/${standalone.jar.name}-win/" file="${dist.jar.dir}/${dist.jar.name}"/>
      <mkdir  dir="${release.dir}/${standalone.jar.name}-linux"/>
      <echo  file="${release.dir}/${standalone.jar.name}-linux/${dist.base.name}.sh">#!/bin/sh -e

java -jar -Xmx256m ${dist.jar.name}
      </echo>
      <chmod file="${release.dir}/${standalone.jar.name}-linux/${dist.base.name}.sh" perm="u+x"/>
      <copy todir="${release.dir}/${standalone.jar.name}-linux/" file="${dist.jar.dir}/${dist.jar.name}"/>
      <echo level="info">Bundling: Creating ZIP Archives</echo>
      <zip destfile="${release.dir}/${standalone.jar.name}-win.zip" basedir="${release.dir}/${standalone.jar.name}-win" update="true"/>
      <zip destfile="${release.dir}/${standalone.jar.name}-linux.tar.gz" basedir="${release.dir}/${standalone.jar.name}-linux" update="true"/>
      <copy todir="${release.dir}/${standalone.jar.name}-mac/" file="${dist.jar.dir}/${dist.jar.name}"/>
      <zip destfile="${release.dir}/${standalone.jar.name}-mac.tar.gz" basedir="${release.dir}/${standalone.jar.name}-mac" update="true"/>
      <echo level="info">Bundling: Cleaning up temporary files</echo>
      <delete dir="${release.dir}/${standalone.jar.name}-win"/>
      <delete dir="${release.dir}/${standalone.jar.name}-linux"/>
      <delete dir="${release.dir}/${standalone.jar.name}-mac"/>
   </target>

   <target name="-post-clean">
      <delete dir="${release.dir}"/>
   </target>

   <!-- =================================================================== -->
   <!-- Ensures code conforms to design and programing guidelines           -->
   <!-- =================================================================== -->
   <target name="qa" depends="compile" description="Makes some test to ensure code conforms to our design- and programing guidlines">
      <taskdef classname="com.puppycrawl.tools.checkstyle.CheckStyleTask" classpath="qa/checkstyle-all.jar" name="checkstyle"/>
      <checkstyle config="qa/chestyleChecks.xml" classpath="${build.classes.dir};${javac.classpath};${build.test.classes.dir}">
         <fileset dir="" includes="${src.dir}/com/wj/android/messageviewer/**/*.java"/>
         <fileset dir="" includes="${test.src.dir}/com/wj/android/messageviewer/**/*.java"/>
         <property key="checkstyle.filter.file" value="${basedir}/qa/suppressions.xml"/>
      </checkstyle>
   </target>

   <!-- =================================================================== -->
   <!-- Runs JDepend on the classes directory,                              -->
   <!-- writes the XML report to the docs/jdepend-report.xml file           -->
   <!-- and generates the jdepend-report.html file using the jdepend.xsl    -->
   <!-- styleshhet.                                                         -->
   <!-- =================================================================== -->
   <target name="jdepend" depends="compile" description="Runs JDepend on the classes directory, and generates a report in dist/jdepend/ directory.">
      <property name="jdepend.dir" value="${dist.dir}/jdepend"/>
      <delete dir="${jdepend.dir}" failonerror="false"/>
      <mkdir dir="${jdepend.dir}"/>
      <jdepend format="xml" outputfile="${jdepend.dir}/jdepend-report.xml">
         <exclude name="java.*"/>
         <exclude name="javax.*"/>
         <exclude name="org.apache.*"/>
         <exclude name="org.w3c.*"/>
         <exclude name="org.xml.*"/>
         <exclude name="sun.*"/>
         <exclude name="com.sun.*"/>
         <classespath>
            <pathelement location="${build.classes.dir}"/>
         </classespath>
      </jdepend>
      <xslt basedir="${jdepend.dir}" destdir="${jdepend.dir}" includes="jdepend-report.xml" style="qa/jdepend-frames.xsl">
         <factory name="org.apache.xalan.processor.TransformerFactoryImpl"/>
         <param name="excludeFromCycles" expression="com.wj.android.messageviewer.gui.actions com.wj.android.messageviewer.gui.shapes com.wj.android.messageviewer.gui.workers"/>
      </xslt>
      <delete file="${jdepend.dir}/jdepend-report.xml"/>
      <delete file="${jdepend.dir}/jdepend-report.html"/>
   </target>

</project>
